{"version":3,"sources":["components/nav.js","context/feedsContext.js","components/filter.js","components/shelf.js","components/footer.js","App.js","serviceWorker.js","index.js"],"names":["Nav","props","className","FeedsContext","React","createContext","newsFeeds","id","title","content","image","Filter","useEffect","handleButtonClick","event","onClick","Shelf","initailFeeds","useContext","useState","feeds","setFeeds","console","log","Fragment","type","aria-describedby","placeholder","onChange","filtedData","filter","el","toLowerCase","indexOf","target","value","setTimeout","map","article","key","src","alt","Footer","App","prop","Boolean","window","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.fbdd6d39.chunk.js","sourcesContent":["import React from 'react';\n\nconst Nav = props => {\n  return (\n    <div className=\"container-fluid\">\n      <div className=\"row\">\n        <div className=\"col-sm-12\">\n          <nav className=\"nav nav-pills nav-justified m-3\">\n            <h4>Home</h4>\n            {/* <a class=\"nav-link active\" href=\"#\">Active</a>\n            <a class=\"nav-link\" href=\"#\">Longer nav link</a>\n            <a class=\"nav-link\" href=\"#\">Link</a>\n            <a class=\"nav-link disabled\" href=\"#\">Disabled</a> */}\n          </nav>\n        </div>\n      </div>\n    </div>\n  );\n}\n\nexport default Nav;\n","import React from 'react';\n\nconst data =  { \n  newsFeeds: [\n    {id:1, title:'This Is Title 1', content:'This is content 1', image:'https://picsum.photos/400/200'},\n    {id:2, title:'This Is Title 2', content:'This is content 2', image:'https://picsum.photos/400/200'},\n    {id:3, title:'This Is Title 3', content:'This is content 3', image:'https://picsum.photos/400/200'},\n    {id:4, title:'This Is Title 4', content:'This is content 4', image:'https://picsum.photos/400/200'},\n    {id:5, title:'This Is Title 5', content:'This is content 5', image:'https://picsum.photos/400/200'},\n    {id:6, title:'This Is Title 6', content:'This is content 6', image:'https://picsum.photos/400/200'},\n    {id:7, title:'This Is Title 7', content:'This is content 7', image:'https://picsum.photos/400/200'},\n    {id:8, title:'This Is Title 8', content:'This is content 8', image:'https://picsum.photos/400/200'},\n    {id:9, title:'This Is Title 9', content:'This is content 9', image:'https://picsum.photos/400/200'},\n    {id:10, title:'This Is Title 10', content:'This is content 10', image:'https://picsum.photos/400/200'},\n  ]\n}\n\nexport const FeedsContext = React.createContext(data);\n\n\n\n\n\n\n\n\n\n// import React, { useState, createContext } from 'react';\n\n// export const FeedsContext = createContext();\n\n// export const FeedsProvider = props => {\n\n//   const data =  { \n//     newsFeeds:[\n//       {id:1, title:'This Is Title 1', content:'This is content 1', image:'https://picsum.photos/400/200'},\n//       {id:2, title:'This Is Title 2', content:'This is content 2', image:'https://picsum.photos/400/200'},\n//       {id:3, title:'This Is Title 3', content:'This is content 3', image:'https://picsum.photos/400/200'},\n//       {id:4, title:'This Is Title 4', content:'This is content 4', image:'https://picsum.photos/400/200'},\n//       {id:5, title:'This Is Title 5', content:'This is content 5', image:'https://picsum.photos/400/200'},\n//       {id:6, title:'This Is Title 6', content:'This is content 6', image:'https://picsum.photos/400/200'},\n//       {id:7, title:'This Is Title 7', content:'This is content 7', image:'https://picsum.photos/400/200'},\n//       {id:8, title:'This Is Title 8', content:'This is content 8', image:'https://picsum.photos/400/200'},\n//       {id:9, title:'This Is Title 9', content:'This is content 9', image:'https://picsum.photos/400/200'},\n//       {id:10, title:'This Is Title 10', content:'This is content 10', image:'https://picsum.photos/400/200'},\n//     ],\n//     // otherFeeds:[\n//     //   {id:11, title:'Title 11', content:'Content 11', image:'https://picsum.photos/400/200'},\n//     //   {id:12, title:'Title 12', content:'Content 12', image:'https://picsum.photos/400/200'},\n//     //   {id:13, title:'Title 13', content:'Content 13', image:'https://picsum.photos/400/200'},\n//     // ]\n//   }\n\n//   const [feeds, setFeeds] = useState(data);\n\n//   return (\n//     <FeedsContext.Provider value={[feeds, setFeeds]}\n//         initalValue={data} >\n//       {props.children}\n//     </FeedsContext.Provider>\n//   );\n// }\n","import React, {useContext, useEffect} from 'react';\n//import { FeedsContext } from '../context/feedsContext';\n\nconst Filter = props => {\n  //const [feeds, setFeeds] = useContext(FeedsContext);\n\n  useEffect(() => {\n    //console.log(`${feeds}` );\n  }, []);\n \n  const handleButtonClick =  (event) => {\n  //   let filtedData = initialContext.filter(el => {\n  //     if (el.title.toLowerCase().indexOf(event.target.value.toLowerCase()) > -1) return el;\n  //    })\n  //    setTimeout(() => setData(filtedData), 500);\n  }\n\n  return (\n    <div className=\"container\">\n      <div>\n        {/* find: {data} */}\n      </div>\n      <div className=\"row\">\n        <div className=\"col-sm-12\">\n          <button className=\"m-2\" onClick={handleButtonClick}>AAA</button>\n          <button className=\"m-2\" onClick={handleButtonClick}>BBB</button>\n          <button className=\"m-2\" onClick={handleButtonClick}>CCC</button>\n          <button className=\"m-2\" onClick={handleButtonClick}>DDD</button>\n        </div>\n      </div>\n    </div>\n  );\n}\n\nexport default Filter;\n","import React, {useState, useContext, useEffect} from 'react';\nimport { FeedsContext } from '../context/feedsContext';\nimport Filter from './filter';\n\nconst Shelf = () => {\n  //const initailFeeds = useContext(FeedsContext);\n  const initailFeeds = useContext(FeedsContext);\n  const [feeds, setFeeds] = useState(initailFeeds);\n\n  useEffect(() => {\n    console.log('render');\n  }, []);\n\n  const handleInputChange =  (event) => {\n    let filtedData = feeds.newsFeeds.filter(el => {\n      if (el.title.toLowerCase().indexOf(event.target.value.toLowerCase()) > -1) {\n        return el;\n      }\n    })\n\n    //console.log(initailFeeds)\n    if (event.target.value === '') {\n      setTimeout(() => setFeeds(initailFeeds), 500);\n    } else {\n      setTimeout(() => setFeeds({newsFeeds : filtedData}), 500);\n    }\n  }\n\n  return (\n    <React.Fragment>\n      {/* search input */}\n      <div className=\"container-fluid\">\n        <form>\n          <div className=\"form-group row\">\n            <div className=\"col-sm-8\">\n              <input type=\"text\" className=\"form-control\" id=\"searchInput\" \n              aria-describedby=\"searchHelp\" placeholder=\"What do you want to search?\"\n              onChange={handleInputChange}/>\n            </div>\n            <button type=\"submit\" className=\"btn btn-primary col-sm-2\">Search</button>\n          </div>\n        </form>\n      </div>\n      {/* result */}\n      <div className=\"container-fluid\">\n        <div className=\"row\">\n          <div className=\"col-sm-3\">\n            <Filter />\n          </div>\n          <div className=\"col-sm-8 mt-5\">\n            <h3>Feeds</h3>\n            <hr/>\n            <div className=\"row\">\n              {feeds.newsFeeds.map(article => (\n                <div key={article.id} className=\"col-6 col-sm-4\">\n                  <h3>{article.title}</h3>\n                  <img src={`${article.image}?random&img=${article.id}`} alt={article.title}></img>\n                  <p>{article.content}</p>\n                </div>\n              ))}\n            </div>\n          </div>\n        </div>\n      </div>\n    </React.Fragment>\n  );\n}\n\nexport default Shelf;\n","import React from 'react';\n\nconst Footer = props => {\n  return (\n    <div className=\"container\">\n      <div className=\"row\">\n        <div className=\"col-sm-12\">\n          <hr></hr>\n          <h2><p className=\"text-center\">This is Footer</p></h2>\n        </div>\n      </div>\n    </div>\n  );\n}\n\nexport default Footer;\n","import React from 'react';\nimport './App.css';\nimport Nav from './components/nav';\nimport Shelf from './components/shelf';\nimport Footer from './components/footer';\n//import { FeedsContext } from './context/feedsContext';\n\n// const [feeds, setFeeds] = useState();\n\nconst App = prop => {\n  return (\n    // <FeedsContext.Provider value={[feeds, setFeeds]}>\n    <React.Fragment>\n      <Nav />\n      <Shelf />\n      <Footer />\n    </React.Fragment>\n    // </FeedsContext.Provider>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport 'bootstrap/dist/js/bootstrap.bundle.min';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}