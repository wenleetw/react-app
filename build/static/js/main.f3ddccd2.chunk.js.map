{"version":3,"sources":["context/feedsContext.js","components/nav.js","components/filter.js","components/shelf.js","components/footer.js","App.js","serviceWorker.js","index.js"],"names":["Nav","props","className","FeedsContext","createContext","data","photoFeeds","i","push","id","title","content","image","Math","floor","random","tags","initalContext","FeedsProvider","useState","feeds","setFeeds","Provider","value","children","Filter","useContext","lastTag","setLastTag","useReducer","state","action","type","filter","el","includes","button","dispatch","useEffect","handleButtonClick","event","target","length","onClick","ItemList","items","map","article","key","Item","src","alt","tag","Shelf","initailFeeds","console","log","aria-describedby","placeholder","onChange","filtedData","toLowerCase","indexOf","setTimeout","Footer","App","prop","Fragment","Boolean","window","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.f3ddccd2.chunk.js","sourcesContent":["import React, {useState, createContext} from 'react';\n\nexport const FeedsContext = createContext();\n\nconst data = { photoFeeds: [] };\nfor (var i = 1; i < 16; i++) {\n  data.photoFeeds.push({\n    id: i, \n    title: `This Is Title ${i}`, \n    content: `This is content ${i}`, \n    image: `https://picsum.photos/400/200?random&img=${Math.floor(Math.random() * 100) + 1}`, \n    tags: i%2 === 0 ? ['AAA','BBB']:['CCC','DDD']})\n}\n\nexport const initalContext = data;\n\nexport const FeedsProvider = props => {\n\n  const [feeds, setFeeds] = useState(\n    data\n  );\n  return (\n    <FeedsContext.Provider value = {[feeds, setFeeds]}>\n      {props.children}\n    </FeedsContext.Provider>\n  )\n}\n\n\n\n//export const initalContext = data;\n\n\n// import React, { useState, createContext } from 'react';\n\n// export const FeedsContext = createContext();\n// export const FeedsProvider = props => {\n\n//   const data =  { \n//     photoFeeds:[\n//       {id:1, title:'This Is Title 1', content:'This is content 1', image:'https://picsum.photos/400/200'},\n//       {id:2, title:'This Is Title 2', content:'This is content 2', image:'https://picsum.photos/400/200'},\n//       {id:3, title:'This Is Title 3', content:'This is content 3', image:'https://picsum.photos/400/200'},\n//       {id:4, title:'This Is Title 4', content:'This is content 4', image:'https://picsum.photos/400/200'},\n//       {id:5, title:'This Is Title 5', content:'This is content 5', image:'https://picsum.photos/400/200'},\n//       {id:6, title:'This Is Title 6', content:'This is content 6', image:'https://picsum.photos/400/200'},\n//       {id:7, title:'This Is Title 7', content:'This is content 7', image:'https://picsum.photos/400/200'},\n//       {id:8, title:'This Is Title 8', content:'This is content 8', image:'https://picsum.photos/400/200'},\n//       {id:9, title:'This Is Title 9', content:'This is content 9', image:'https://picsum.photos/400/200'},\n//       {id:10, title:'This Is Title 10', content:'This is content 10', image:'https://picsum.photos/400/200'},\n//     ],\n//     // otherFeeds:[\n//     //   {id:11, title:'Title 11', content:'Content 11', image:'https://picsum.photos/400/200'},\n//     //   {id:12, title:'Title 12', content:'Content 12', image:'https://picsum.photos/400/200'},\n//     //   {id:13, title:'Title 13', content:'Content 13', image:'https://picsum.photos/400/200'},\n//     // ]\n//   }\n\n//   const [feeds, setFeeds] = useState(data);\n\n//   return (\n//     <FeedsContext.Provider value={[feeds, setFeeds]}\n//         initalValue={data} >\n//       {props.children}\n//     </FeedsContext.Provider>\n//   );\n// }\n","import React from 'react';\n\nconst Nav = props => {\n  return (\n    <div className=\"container-fluid\">\n      <div className=\"row\">\n        <div className=\"col-sm-12\">\n          <nav className=\"nav nav-pills nav-justified m-3\">\n            <h4>Home</h4>\n            {/* <a class=\"nav-link active\" href=\"#\">Active</a>\n            <a class=\"nav-link\" href=\"#\">Longer nav link</a>\n            <a class=\"nav-link\" href=\"#\">Link</a>\n            <a class=\"nav-link disabled\" href=\"#\">Disabled</a> */}\n          </nav>\n        </div>\n      </div>\n    </div>\n  );\n}\n\nexport default Nav;\n","import React, {useState, useContext, useEffect, useReducer } from 'react';\nimport { initalContext, FeedsContext } from '../context/feedsContext';\n\n\nconst Filter = props => {\n\n  const [feeds, setFeeds] = useContext(FeedsContext);\n  const [lastTag, setLastTag] = useState(\"\");\n  const [state, dispatch] = useReducer(reducer, initalContext);\n\n  function reducer(state, action) {\n    switch(action.type) {\n      case 'FILTER':\n        return { photoFeeds: action.value.filter(el => el[\"tags\"].includes(action.button))};\n      case 'RESET':\n        return { photoFeeds: action.value }\n      default:\n        return state;\n    }\n  }\n  useEffect(() => {\n    setFeeds(state);\n  }, [state]);\n\n  const handleButtonClick = (event) => {\n    if (event.target.value === lastTag) {\n      dispatch({type : \"RESET\", value: initalContext.photoFeeds});\n      return;\n    }\n    dispatch({type : \"FILTER\", value: initalContext.photoFeeds, button: event.target.value});\n    setLastTag(event.target.value);\n  }\n\n  const handleResetClick = (event) => {\n    dispatch({type : \"RESET\", value: initalContext.photoFeeds});\n    setLastTag(\"\");\n  }\n\n  return (\n    <div className=\"container\">\n      <small>{`counts:${feeds.photoFeeds.length} selected:${lastTag}`}</small>\n      <div className=\"row\">\n        <div className=\"col-sm-12\">\n          <button className=\"m-2 btn btn-light\" onClick={handleButtonClick} value=\"AAA\">AAA</button>\n          <button className=\"m-2 btn btn-light\" onClick={handleButtonClick} value=\"BBB\">BBB</button>\n          <button className=\"m-2 btn btn-light\" onClick={handleButtonClick} value=\"CCC\">CCC</button>\n          <button className=\"m-2 btn btn-light\" onClick={handleButtonClick} value=\"DDD\">DDD</button>\n        </div>\n        <br></br>\n        <br></br>\n        <div className=\"col-sm-12\">\n          <button className=\"m-2 btn btn-secondary\" onClick={handleResetClick}>Reset All</button>\n        </div>\n      </div>\n    </div>\n  );\n}\n\nexport default Filter;\n","import React, {useState, useContext, useEffect, useRef} from 'react';\nimport { FeedsContext } from '../context/feedsContext';\nimport Filter from './filter';\nimport Spinner from 'react-bootstrap/Spinner';\nimport Modal from 'react-bootstrap/Modal';\nimport Button from 'react-bootstrap/Button'\n\nconst Shelf = () => {\n  const initailFeeds = useContext(FeedsContext);\n  const [feeds, setFeeds] = useContext(FeedsContext);\n\n  useEffect(() => {\n    console.log('render');\n  }, []);\n\n  const handleInputChange = (event) => {\n    let filtedData = feeds.photoFeeds.filter(el => {\n      if ((el.title.toLowerCase().indexOf(event.target.value.toLowerCase()) > -1) ||\n        (el.content.toLowerCase().indexOf(event.target.value.toLowerCase()) > -1)) {\n        return el;\n      }\n    })\n\n    \n    //console.log(initailFeeds)\n    if (event.target.value === '') {\n      setTimeout(() => setFeeds(initailFeeds), 500);\n    } else {\n      setTimeout(() => setFeeds({photoFeeds : filtedData}), 500);\n    } \n  }\n\n  return (\n    <div>\n      {/* search input */}\n      <div className=\"container-fluid\">\n        <form>\n          <div className=\"form-group row\">\n            <div className=\"col-12 offset-sm-1 col-sm-8\">\n              <input type=\"text\" className=\"form-control form-control-lg\" id=\"searchInput\" \n              aria-describedby=\"searchHelp\" placeholder=\"What do you want to search?\"\n              onChange={handleInputChange}/>\n            </div>\n            <button type=\"submit\" className=\"btn btn-primary btn-lg col-4 col-sm-2\">Search</button>\n          </div>\n        </form>\n      </div>\n      {/* result */}\n      <div className=\"container-fluid\">\n        <div className=\"row\">\n          <div className=\"col-sm-3\">\n            <Filter />\n          </div>\n          <div className=\"col-sm-8 mt-5\">\n            <h3>Feeds</h3>\n            <hr/>\n            <ItemList items={feeds}/>\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n}\n\nconst ItemList = ({items}) => {\n  return (\n    <div className=\"row\">\n    {items.photoFeeds.map(article => (\n      <Item key={ article.id } article={article}/>\n    ))}\n  </div>\n  )\n}\n\nconst Item = ({article}) => {\n  return (\n    <div key={article.id} className=\"col-6 col-sm-4 p-1\" >\n      <h3>{article.title}</h3>\n      <img src={`${article.image}`} alt={article.title}></img>\n      {/* <Spinner animation=\"border\" variant=\"primary\" /> */}\n      <p>\n        {article.content}\n        <br></br>\n        <small><i>{article.tags.map((tag) => tag + ' ' )}</i></small>\n      </p>\n   </div>\n  )\n}\n\n// const handleModalOpen = () => {\n//   const [show, setShow] = useState(false);\n\n//   const handleClose = () => setShow(false);\n//   const handleShow = () => setShow(true);\n\n//   return (\n//     <>\n//       <Button variant=\"primary\" onClick={handleShow}>\n//         Launch demo modal\n//       </Button>\n\n//       <Modal show={show} onHide={handleClose}>\n//         <Modal.Header closeButton>\n//           <Modal.Title>Modal heading</Modal.Title>\n//         </Modal.Header>\n//         <Modal.Body>Woohoo, you're reading this text in a modal!</Modal.Body>\n//         <Modal.Footer>\n//           <Button variant=\"secondary\" onClick={handleClose}>\n//             Close\n//           </Button>\n//           <Button variant=\"primary\" onClick={handleClose}>\n//             Save Changes\n//           </Button>\n//         </Modal.Footer>\n//       </Modal>\n//     </>\n//   );\n// }\n\nexport default Shelf;\n","import React from 'react';\n\nconst Footer = props => {\n  return (\n    <div className=\"container\">\n      <div className=\"row\">\n        <div className=\"col-sm-12\">\n          <hr></hr>\n          <h2><p className=\"text-center\">This is Footer</p></h2>\n        </div>\n      </div>\n    </div>\n  );\n}\n\nexport default Footer;\n","import React from 'react';\nimport './App.css';\nimport Nav from './components/nav';\nimport Shelf from './components/shelf';\nimport Footer from './components/footer';\nimport { FeedsProvider } from './context/feedsContext';\n\nconst App = prop => {\n  return (\n    <FeedsProvider>\n      <React.Fragment>\n        <Nav />\n        <Shelf />\n        <Footer />\n      </React.Fragment>\n    </FeedsProvider>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport 'bootstrap/dist/js/bootstrap.bundle.min';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}